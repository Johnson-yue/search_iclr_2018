Under review as a conference paper at ICLR 2018

ON OPTIMALITY CONDITIONS FOR AUTO-ENCODER SIGNAL RECOVERY
Anonymous authors Paper under double-blind review

ABSTRACT
Auto-Encoders are unsupervised models that aim to learn patterns from observed data by minimizing a reconstruction cost. The useful representations learned are often found to be sparse and distributed. On the other hand, compressed sensing and sparse coding assume a data generating process, where the observed data is generated from some true latent signal source, and try to recover the corresponding signal from measurements. Looking at auto-encoders from this signal recovery perspective enables us to have a more coherent view of these techniques. In this paper, in particular, we show that the true hidden representation can be approximately recovered if the weight matrices are highly incoherent with unit 2 row length and the bias vectors takes the value (approximately) equal to the negative of the data mean. The recovery also becomes more and more accurate as the sparsity in hidden signals increases. Additionally, we empirically also demonstrate that auto-encoders are capable of recovering the data generating dictionary when only data samples are given.

1 INTRODUCTION
Recovering hidden signal from measurement vectors (observations) is a long studied problem in compressed sensing and sparse coding with a lot of successful applications. On the other hand, autoencoders (AEs) (Bourlard and Kamp, 1988) are useful for unsupervised representation learning for uncovering patterns in data. AEs focus on learning a mapping x  h  x^, where the reconstructed vector x^ is desired to be as close to x as possible for the entire data distribution. What we show in this paper is that if we consider x is actually generated from some true sparse signal h by some process (see section 3), then switching our perspective on AE to analyze h  x  h^ shows that AE is capable of recovering the true signal that generated the data and yields useful insights into the optimality of model parameters of auto-encoders in terms of signal recovery. In other words, this perspective lets us look at AEs from a signal recovery point of view where forward propagating x recovers the true signal h. We analyze the conditions under which the encoder part of an AE recovers the true h from x, while the decoder part acts as the data generating process. Our main result shows that the true sparse signal h (with mild distribution assumptions) can be approximately recovered by the encoder of an AE with high probability under certain conditions on the weight matrix and bias vectors. Additionally, we empirically show that in a practical setting when only data is observed, optimizing the AE objective leads to the recovery of both the data generating dictionary W and the true sparse signal h, which together is not well studied in the auto-encoder framework, to the best of our knowledge.

2 SPARSE SIGNAL RECOVERY PERSPECTIVE

While it is known both empirically and theoretically, that useful features learned by AEs are usually sparse (Memisevic et al., 2014; Nair and Hinton, 2010; Arpit et al., 2016). An important question that hasn't been answered yet is whether AEs are capable of recovering sparse signals, in general. This is an important question for Sparse Coding, which entails recovering the sparsest h that approximately satisfies x = WT h, for any given data vector x and overcomplete weight matrix W. However, since this problem is NP complete (Amaldi and Kann, 1998), it is usually relaxed to solving an expensive optimization problem (Candes et al., 2006; Candes and Tao, 2006),

arg min x - WT h 2 +  h 1
h

(1)

1

Under review as a conference paper at ICLR 2018

where W  Rm×n is a fixed overcomplete (m > n) dictionary,  is the regularization coefficient, x  Rn is the data and h  Rm is the signal to recover. For this special case, Makhzani and Frey (2013) analyzed the condition under which linear AEs can recover the support of the hidden signal.
The general AE objective, on the other hand, minimizes the expected reconstruction cost

JAE = min Ex L(x, sd WT se(Wx + be) + bd )
W,be ,bd

(2)

for some reconstruction cost L, encoding and decoding activation function se(.) and sd(.), and bias vectors be and bd. In this paper we consider linear activation sd because it is a more general case. Notice however, in the case of auto-encoders, the activation functions can be non-linear in general,
in contrast to the sparse coding objective. In addition, in case of AEs we do not have a separate
parameter h for the hidden representation corresponding to every data sample x individually. Instead,
the hidden representation for every sample is a parametric function of the sample itself. This is
an important distinction between the optimization in eq. 1 and our problem ­ the identity of h in eq. 1 is only well defined in the presence of 1 regularization due to the overcompleteness of the
dictionary. However, in our problem, we assume a true signal h generates the observed data x as x = WT h + bd, where the dictionary W and bias vector bd are fixed. Hence, what we mean by recovery of sparse signals in an AE framework is that if we generate data using the above generation process, then can the estimate h^ = se(Wx + be) indeed recover the true h for some activation functions se(.), and bias vector be? And if so, what properties of W, be, se(.) and h lead to good recovery? However, when given an x and the true overcomplete W, the solution h to x = WT h is
not unique. Then the question arises about the possibility of recovering such an h. However, as we
show, recovery using the AE mechanism is strongest when the signal h is the sparsest possible one, which from compressed sensing theory, guarantees uniqueness of h if W is sufficiently incoherent 1.

3 DATA GENERATION PROCESS

We consider the following data generation process:

x = WT h + bd + e

(3)

where x  Rn is the observed data, bd  Rn is a bias vector, e  Rn is a noise vector, W  Rm×n is the weight matrix and h  Rm is the true hidden representation (signal) that we want to recover. Throughout our analysis, we assume that the signal h belongs to the following class of distribution,

Assumption 1. Bounded Independent Non-negative Sparse (BINS): Every hidden unit hj is an independent random variable with the following density function:

f (hj) =

(1 - pj)0(hj) if

pj fc(hj )

if

hj = 0 hj  (0, lmaxj ]

(4)

where fc(.) can be any arbitrary normalized distribution bounded in the interval (0, lmaxj ], mean µhj , and 0(.) is the Dirac Delta function at zero. As a short hand, we say that hj follows the distribution BINS(p, fc, µh, lmax). Notice that Ehj [hj] = pjµhj .
The above distribution assumption fits naturally with sparse coding, when the intended signal is non-negative sparse. From the AE perspective, it is also justified based on the following observation. In neural networks with ReLU activations, hidden unit pre-activations have a Gaussian like symmetric distribution (Hyvärinen and Oja, 2000; Ioffe and Szegedy, 2015). If we assume these distributions are mean centered2, then the hidden units' distribution after ReLU has a large mass at 0 while the rest of the mass concentrates in (0, lmax] for some finite positive lmax, because the pre-activations concentrate symmetrically around zero. As we show in the next section, ReLU is indeed capable of recovering such signals. On a side note, the distribution from assumption 1 can take shapes similar to that of Exponential or Rectified Gaussian distribution3 (which are generally used for modeling biological neurons) but is simpler to analyze. This is because we allow fc(.) to be any arbitrary normalized distribution. The only restriction assumption 1 has is that to be bounded. However, this

1Coherence is defined as maxWi,Wj ,i=j

|WiT Wj | Wi Wj

2This happens for instance as a result of the Batch Normalization (Ioffe and Szegedy, 2015) technique, which leads to significantly faster

convergence. It is thus a good practice to have a mean centered pre-activation distribution.

3depending on the distribution fc(.)

2

Under review as a conference paper at ICLR 2018

does not change the representative power of this distribution significantly because: a) the distributions used for modeling neurons have very small tail mass; b) in practice, we are generally interested in signals with upper bounded values.
The generation process considered in this section (i.e. eq. 3 and assumptions 1) is justified because: 1. This data generation model finds applications in a number of areas (Yang et al., 2009; Kavukcuoglu et al., 2010; Wright et al., 2009). Notice that while x is the measurement vector (observed data), which can in general be noisy, h denotes the actual signal (internal representation) because it reflects the combination of dictionary (WT ) atoms involved in generating the observed samples and hence serves as the true identity of the data. 2. Sparse distributed representation (Hinton, 1984) is both observed and desired in hidden representations. It has been empirically shown that representations that are truly sparse (i.e. large number of true zeros) and distributed usually yield better linear separability and performance (Glorot et al., 2011; Wright et al., 2009; Yang et al., 2009).
Decoding bias (bd): Consider the data generation process (exclude noise for now) x = WT h + bd. Here bd is a bias vector which can take any arbitrary value but similar to W, it is fixed for any particular data generation process. However, the following remark shows that if an AE can recover the sparse code (h) from a data sample generated as x = WT h, then it is also capable of recovering the sparse code from the data generated as x = WT h + bd and vice versa.
Remark 1. Let x1 = WT h where x1  Rn, W  Rm×n and h  Rm. Let x2 = WT h + bd where bd  Rn is a fixed vector. Let h^1 = se(Wx1 + b) and h^2 = se(Wx2 + b - Wbd). Then h^1 = h iff h^2 = h.
Thus without any loss of generality, we will assume our data is generated from x = WT h + e.

4 SIGNAL RECOVERY ANALYSIS

We analyse two separate class of signals in this category­ continuous sparse, and binary sparse signals that follow BINS. For notational convenience, we will drop the subscript of be and simply refer this parameter as b since it is the only bias vector (we are not considering the other bias bd due to remark 1). The Auto-Encoder signal recovery mechanism that we analyze throughout this paper is defined as,
Definition 1. Let a data sample x  Rn be generated by the process x = WT h + e where W  Rm×n is a fixed matrix, e is noise and h  Rm. Then we define the Auto-Encoder signal recovery mechanism as h^se (x; W, be) that recovers the estimate h^ = se(Wx + be) where se(.) is an activation function.

4.1 BINARY SPARSE SIGNAL ANALYSIS

First we consider the noiseless case of data generation,
Theorem 1. (Noiseless Binary Signal Recovery): Let each element of h follow BINS(p, 1, µh, lmax) and let h^  Rm be an auto-encoder signal recovery mechanism with Sigmoid activation function and bias b for a measurement vector x  Rn such that x = WT h. If we set bi = - j aijpj i  [m], then    (0, 1),

Pr m1 h^ - h    1- (1 - p )e + p e1

m

i

-2

( +piaii)2

m j=1,j=i

a2ij

i

-2 (

+(1-pi )aii )2

m j=1,j=i

ai2j

i=1

(5)

where aij = WiT Wj, 

=

ln(

 1-

)

and

Wi

is

the

ith

row

of

the

matrix

W

cast

as

a

column

vector.

Analysis: We first analyse the properties of the weight matrix W that results in strong recovery

bound. Notice the terms ( simultaneously, the term

+mj=p1i,aj=iii)a2 i2ajnnde(eds+to(1be-apsi)caloiis)e2

need to to zero

be as

as large as possible, while possible. For the sake of

analysis, lets set4  = 0 (achieved when  = 0.5). Then our problem gets reduced to maximizing the

ratio

=(aii )2

m j=1,j=i

ai2j

=Wi 4

m j=1,j=i

(WiT

Wj

)2

Wi 2

m j=1,j=i

Wj

2

cos2ij

,

where

ij

is

the

angle

between

Wi

and Wj. From the property of coherence, if the rows of the weight matrix is highly incoherent, then

4Setting  = 0.5 is not such a bad choice after all because for binary signals, we can recover the exact true signal with high probability by simply binarize the signal recovered by Sigmoid with some threshold.

3

Under review as a conference paper at ICLR 2018

cos ij is close to 0. Again, for the ease of analysis, lets replace each cos ij with a small positive

number . Then

(aii )2

 = . Finally, since wem
j=1,j=i

ai2j

Wi 2

2

m j=1,j=i

Wj

2

1

2

m j=1,j=i

Wj

2/

Wi

2

would want this term to be maximized for each hidden unit hi equally, the obvious choice for each

weight length Wi (i  [m]) is to set it to 1.

Finally, lets analyse the bias vector. Notice we have instantiated each element of the encoding bias bi to take value - j aijpj. Since pj is essentially the mean of each binary hidden unit hi, we can say that bi = - j aij Ehj [hj ] = -WiT WT Eh[h] = -WiT Eh[x].

Signal recovery is strong for binary signals when the recovery mechanism is given by

h^i Sigmoid(WiT (x - Eh[x]))

(6)

where the rows of W are highly incoherent and each hidden weight has length ones ( Wi 2 = 1), and each dimension of data x is approximately uncorrelated (see theorem 3).

Now we state the recovery bound for the noisy data generation scenario.
Proposition 1. (Noisy Binary Signal Recovery): Let each element of h follow BINS(p, 1, µh, lmax) and let h^  Rm be an auto-encoder signal recovery mechanism with Sigmoid activation function and bias b for a measurement vector x = WT h + e where e  Rn is any noise vector independent of h. If we set bi = - j aijpj - WiT Ee[e] i  [m], then    (0, 1),

Pr

1 m

h^ - h

1

m
1-

(1 - p )ei

-2 (

-WiT (e-Ee[e])+piaii)2

m j=1,j=i

ai2j

i=1

+p ei

-2 (

-WiT (e-Ee[e])+(1-pi)aii)2

m j=1,j=i

a2ij

(7) (8)

where aij = WiT Wj, 

=

ln(

 1-

)

and

Wi

is

the

ith

row

of

the

matrix

W

cast

as

a

column

vector.

We have not assumed any distribution on the noise random variable e and this term has no effect on
recovery (compared to the noiseless case) if the noise distribution is orthogonal to the hidden weight
vectors. Again, the same properties of W lead to better recovery as in the noiseless case. In the case of bias, we have set each element of the bias bi - j aijpj - WiT Ee[e] i  [m]. Notice from the definition of BINS, Ehj [hj] = pj. Thus in essence, bi = - j aijEhj [hj] - WiT Ee[e]. Expanding aij, we get, bi -WiT WT Eh[h] - WiT Ee[e] = -WiT Eh[x]. Thus the expression of bias is unaffected by error statistics as long as we can compute the data mean.
In this section, we will first consider the case when data (x) is generated by linear process x = WT h + e, and if W and encoding bias b have certain properties, then the signal recovery bound ( h - h^ ) is strong. We will then consider the case when data generated by a non-linear process x = sd(WT h + bd + e) (for certain class of functions sd(.)) can be recovered as well by the same mechanism. For deep non-linear networks, this means that forward propagating data to hidden layers,
such that the network parameters satisfy the required conditions, implies each hidden layer recovers
the true signal that generated the corresponding data. We have moved all the proofs to appendix for
better readability.

4.2 CONTINUOUS SPARSE SIGNAL RECOVERY
Theorem 2. (Noiseless Continuous Signal Recovery): Let each element of h  Rm follow BINS(p, fc, µh, lmax) distribution and let h^ReLU (x; W, b) be an auto-encoder signal recovery mechanism with Rectified Linear activation function (ReLU) and bias b for a measurement vector
4

Under review as a conference paper at ICLR 2018

x  Rn such that x = WT h. If we set bi - j aijpjµhj i  [m], then    0,

Pr m1 h^ - h    1 - e1

m

(+
-2

j (1-pj )(lmaxj -2pj µhj ) max(0,aij ))2 j ai2j l2maxj

i=1

(+
-2
+e

j (1-pj )(lmaxj -2pj µhj ) max(0,-aij ))2

j ai2j l2maxj



(9)

where ais are vectors such that

aij =

WiT Wj WiT Wi - 1

if if

i=j i=j

(10)

Wi is the ith row of the matrix W cast as a column vector.

Analysis: We first analyze the properties of the weight matrix that results in strong recovery bound. We find that for strong recovery, the terms ( + j(1 - pj)(lmaxj - 2pjµhj ) max(0, aij))2 and (+ j(1-pj)(lmaxj -2pjµhj ) max(0, -aij))2 should be as large as possible, while simultaneously, the term j a2ijlm2 axj needs to be as close to zero as possible. First, notice the term (1 - pj)(lmaxj -
2pjµhj ). Since µhj < lmaxj by definition, we have that both terms containing (1 - pj)(lmaxj - 2pjµhj ) are always positive and contributes towards stronger recovery if pj is less than 50% (sparse), and becomes stronger as the signal becomes sparser (smaller pj).

Now if we assume the rows of the weight matrix W are highly incoherent and that each row of W has unit 2 length, then it is safe to assume each aij (i, j  [m]) is close to 0 from the definition of aij
and properties of W we have assumed. Then for any small positive value of , we can approximately

say (+

j (1-pj )(lmaxj -2pj µhj ) max(0,aij ))2 j a2ij lm2 axj

2 j a2ij lm2 axj

where each aij

is very close to zero. The

same argument holds similarly for the other term. Thus we find that a strong signal recovery bound

would be obtained if the weight matrix is highly incoherent and all hidden vectors are of unit length.

In the case of bias, we have set each element of the bias bi - j aijpjµhj i  [m]. Notice from the definition of BINS, Ehj [hj] = pjµhj . Thus in essence, bi = - j aijEhj [hj]. Expanding aij, we get bi = -WiT WT Eh[h] + Ehi [hi] = -WiT Eh[x] + Ehi [hi].

The recovery bound is strong for continuous signals when the recovery mechanism is set to

h^i ReLU(WiT (x - Ex[x]) + Ehi [hi])

(11)

and the rows of W are highly incoherent and each hidden weight has length ones ( Wi 2 = 1).

Now we state the recovery bound for the noisy data generation scenario.
Proposition 2. (Noisy Continuous Signal Recovery): Let each element of h  Rm follow BINS(p, fc, µh, lmax) distribution and let h^ReLU (x; W, b) be an auto-encoder signal recovery mechanism with Rectified Linear activation function (ReLU) and bias b for a measurement vector x  Rn such that x = WT h + e where e is any noise random vector independent of h. If we set bi - j aijpjµhj - WiT Ee[e] i  [m], then    0,

Pr m1 h^ - h    1 - e1

m

-2 (-WiT (e-Ee[e])+

j (1-pj )(lmaxj -2pj µhj ) max(0,aij ))2 j ai2j lm2 axj

i=1

-2 (-WiT (e-Ee[e])+
+e

j (1-pj )(lmaxj -2pj µhj ) max(0,-aij ))2

j a2ij lm2 axj



where ais are vectors such that

aij =

WiT Wj WiT Wi - 1

if if

i=j i=j

(12) (13)

5

Under review as a conference paper at ICLR 2018

Wi is the ith row of the matrix W cast as a column vector.
Notice that we have not assumed any distribution on variable e, which denotes the noise. Also, this term has no effect on recovery (compared to the noiseless case) if the noise distribution is orthogonal to the hidden weight vectors. On the other hand, the same properties of W lead to better recovery as in the noiseless case. However, in the case of bias, we have set each element of the bias bi - j aijpjµhj - WiT Ee[e] i  [m]. From the definition of BINS, Ehj [hj] = pjµhj . Thus bi = - j aij Ehj [hj ] - WiT Ee[e]. Expanding aij , we get, bi -WiT WT Eh[h] + Ehi [hi] - WiT Ee[e] = -WiT Eh[x] + Ehi [hi]. Thus the expression of bias is unaffected by error statistics as long as we can compute the data mean (i.e. the recovery is the same as shown in eq. 11).

4.3 PROPERTIES OF GENERATED DATA
Since the data we observe results from the hidden signal given by x = WT h, it would be interesting to analyze the distribution of the generated data. This would provide us more insight into what kind of pre-processing would ensure stronger signal recovery.
Theorem 3. (Uncorrelated Distribution Bound): If data is generated as x = WT h where h  Rm has covariance matrix diag(), (  R+m ) and W  Rm×n (m > n) is such that each row of W has unit length and the rows of W are maximally incoherent, then the covariance matrix of the generated data is approximately spherical (uncorrelated) satisfying,

min  - I F 


1 (m 
n

2 2

-



21)

(14)

where  = Ex[(x - Ex[x])(x - Ex[x])T ] is the covariance matrix of the generated data.

Analysis:

Notice that for any vector v

 Rm, m

v

2 2



v 21, and the equality holds when each

element of the vector v is identical.

Data x generated using a maximally incoherent dictionary W (with unit 2 row length) as x = WT h guarantees x is highly uncorrelated if h is uncorrelated with near identity covariance.
This would ensure the hidden units at the following layer are also uncorrelated during training.
Further the covariance matrix of x is identity, if all hidden units have equal variance.

This analysis acts as a justification for data whitening where data is processed to have zero mean and identity covariance matrix. Notice that although the generated data does not have zero mean, the recovery process (eq. 11) subtracts data mean and hence it does not affect recovery.

4.4 CONNECTIONS WITH EXISTING WORK

Auto-Encoders (AE): Our analysis reveals the conditions on parameters of an AE that lead to strong recovery of h (for both continuous and binary case), which ultimately implies low data reconstruction error.
However, the above arguments hold for AEs from a recovery point of view. Training an AE on data may lead to learning of the identity function. Thus usually AEs are trained along with a bottle-neck to make the learned representation useful. One such bottle-neck is the De-noising criteria given by,

JDAE = min x - WT se(Wx~ + b) 2
W,b

(15)

where se(.) is the activation function and x~ is a corrupted version of x. It has been shown that the Tay-

lor's expansion of DAE (Theorem 3 of Arpit et al., 2016) has the term

m j,k=1
j=k

hj aj

hk ak

(WjT

Wk

)2

.

If we constrain the lengths of the weight vectors to have fixed length, then this regularization term

minimizes a weighted sum of cosine of the angle between every pair of weight vectors. As a result,

the weight vectors become increasingly incoherent. Hence we achieve both our goals by adding

one additional constraint to DAE­ constraining weight vectors to have unit length. Even if we do

not apply an explicit constraint, we can expect the weight lengths to be upper bounded from the

basic AE objective itself, which would explain the learning of incoherent weights due to the DAE

regularization.On a side note, our analysis also justifies the use of tied weights in auto-encoders.

6

Under review as a conference paper at ICLR 2018

Sparse Coding (SC): SC involves minimizing x - WT h 2 using the sparsest possible h. The analysis after theorem 2 shows signal recovery using the AE mechanism becomes stronger for sparser signals (as also confirmed experimentally in section 5). In other words, for any given data sample and weight matrix, as long as the conditions on the weight matrix and bias are met, the AE recovery mechanism recovers the sparsest possible signal; which justifies using auto-encoders for recovering sparse codes (see Henaff et al., 2011; Makhzani and Frey, 2013; Ng, 2011, for work along this line).
Independent Component Analysis(Hyvärinen and Oja, 2000) (ICA): ICA assumes we observe data generated by the process x = WT h where all elements of the h are independent and W is a mixing matrix. The task of ICA is to recover both W and h given data. This data generating process is precisely what we assumed in section 3. Based on this assumption, our results show that 1) the properties of W that can recover such independent signals h; and 2) auto-encoders can be used for recovering such signals and weight matrix W.
k-Sparse AEs : Makhzani and Frey (2013) propose to zero out all the values of hidden units smaller than the top-k values for each sample during training. This is done to achieve sparsity in the learned hidden representation. This strategy is justified from the perspective of our analysis as well. This is because the PAC bound (theorem 2) derived for signal recovery using the AE signal recovery mechanism shows we recover a noisy version of the true sparse signal. Since the noise in each recovered signal unit is roughly proportional to the original value, de-noising such recovered signals can be achieved by thresholding the hidden unit values (exploiting the fact that the signal is sparse). This can be done either by using a fixed threshold or picking the top k values.
Data Whitening: Theorem 3 shows that data generated from BINS and incoherent weight matrices are roughly uncorrelated. Thus recovering back such signals using auto-encoders would be easier if we pre-process the data to have uncorrelated dimensions.

5 EMPIRICAL VERIFICATION

We empirically verify the fundamental predictions made in section 4 which both serve to justify the assumptions we have made, as well as confirm our results. We verify the following: a) the optimality of the rows of a weight matrix W to have unit length and being highly incoherent for AE signal recovery; b) effect of sparsity on AE signal recovery; and c) in practice, AE can recover not only the true sparse signal h, but also the dictionary W that used to generate the data.

c c
APRE

Cont. Signal Recovery

90

1.5

80 70

60

1.0

50 40

0.5

30 20

10

1.0 0.5 0.b0 0.5 1.0

Binary Signal Recovery 50
1.5 40 30
1.0 20 0.5 10
1.0 0.5 0.b0 0.5 1.0 0

Figure 1: Error heatmap showing optimal values of c and b for recovering continous (left) and binary (right) signal using inchoherent weights.

60

Binary Recovery Continous Recovery

40

20

0 0.001

0.01N0oise std0..100

1.000

Figure 2: Average percentage recovery error of noisy signal recovery.

5.1 OPTIMAL PROPERTIES OF WEIGHTS AND BIAS

Our analysis on signal recovery in section 4 (eq. 11) shows signal recovery bound is strong when a) the data generating weight matrix W has rows of unit 2 length; b) the rows of W are highly
incoherent; c) each bias vector element is set to the negative expectation of the pre-activation; d)
signal h has each dimension independent. In order to verify this, we generate N = 5, 000 signals h  Rm=200 from BINS(p=0.02,fc=uniform, µh=0.5,lmax=1) with fc(.) set to uniform distribution for simplicity. We then generate the corresponding 5, 000 data sample x = cWT h  R180 using an incoherent weight matrix W  R200×180 (each element sampled from zero mean Gaussian, the columns are then orthogonalized, and 2 length of each row rescaled to 1; notice the rows cannot be
orthogonal). We then recover each signal using,

h^i ReLU(cWiT (x - Eh[x]) + Ehi [hi] + b)

(16)

7

Under review as a conference paper at ICLR 2018

where c and b are scalars that we vary between [0.1, 2] and [-1, +1] respectively. We also generate N = 5, 000 signals h  {0, 1}m=200 from BINS(0.02,1, 0.02,1) with fc(.) set to Dirac delta function at 1. We then generate the corresponding 5, 000 data sample x = cWT h  R180 following
the same procedure as for the continuous signal case. The signal is recovered using

h^i (cWiT (x - Eh[x]) + b)

(17)

where  is the sigmoid function. For the recovered signals, we calculate the Average Percentage

Recovery Error (APRE) as,

100 APRE =
Nm

N,m

whij 1(|h^ji - hij | > )

i=1,j=1

(18)

where we set to 0.1 for continuous signals and 0 for binary case, 1(.) is the indicator operator, h^ji denotes the jth dimension of the recovered signal corresponding to the ith true signal and,

whij =

0.5 p

if

0.5 1-p

if

hji > 0 hij = 0

(19)

The error is weighted with whij so that the recovery error for both zero and non-zero hijs are penalized equally. This is specially needed in this case, because hij is sparse and a low error can also be achieved
by trivially setting all the recovered h^ji s to zero. Along with the incoherent weight matrix, we also generate data separately using a highly coherent weight matrix that we get by sampling each element

randomly from a uniform distribution on [0, 1] and scaling each row to unit length. According to

our analysis, we should get least error for c = 1 and b = 0 for the incoherent matrix while the

coherent matrix should yield both higher recovery error and a different choice of c and b (which is

unpredictable). The error heat maps for both continuous and binary recovery5 are shown in fig. 1. For

the incoherent weight matrix, we see that the empirical optimal is precisely c = 1 and b = 0 (which

is exactly as predicted) with 0.21 and 0.0 APRE for continuous and binary recovery, respectively. It

is interesting to note that the binary recovery is quite robust with the choice of c and b, which is

because 1) the recovery is denoised through thresholding, and 2) the binary signal inherently contains

less information and thus is easier to recover. For the coherent weight matrix, we get 45.75 and 32.63

APRE instead (see fig. 5).

We also experiment on the noisy recovery case, where we generate the data using incoherent weight matrix with c = 1 and b = 0. For each data dimension we add independent Gaussian noise with mean 100 with standard deviation varying from 0.001 to 1. Both signal recovery schemes are quite robust against noise (see fig. 2). In particular, the binary signal recovery is very robust, which conforms with our previous observation.

5.2 EFFECT OF SPARSITY ON SIGNAL RECOVERY
We analyze the effect of sparsity of signals on their recovery using the mechanism shown in section 4. In order to do so, we generate incoherent matrices using two different methods­ Gaussian6 and orthogonal (Saxe et al., 2013). In addition, all the generated weight matrices are normalized to have unit 2 row length. We then sample signals and generate data using the same configurations as mentioned in section 5.1; only this time, we fix c = 1 and b = 0, vary hidden unit activation probability p in [0.02, 1], and duplicate the generated data while adding noise to the copy, which we sample from a Gaussian distribution with mean 100 and standard deviation 0.05. According to our analysis, noise mean should have no effect on recovery so the mean value of 100 shouldn't have any effect; only standard deviation affects recovery. We find for all weight matrices, recovery error reduces with increasing sparsity (decreasing p, see fig. 3). Additionally, we find that both recovery are robust against noise. We also find the recovery error trend is almost always lower for orthogonal weight matrices, especially when the signal is sparse. 7 Recall theorem 2 suggests stronger recovery for more incoherent matrices. So we look into the row coherence of W  Rm×n sampled from Gaussian and Orthogonal methods with m = 200 and varying n  [100, 300]. We found that orthogonal initialized matrices have significantly lower coherence even though the orthogonalization is done column-wise (see fig. 6.). This explains significantly lower recovery error for orthogonal matrices in figure 3.
5We use 0.55 as the threshold to binarize the recovered signal using sigmoid function. 6Gaussian and Xavier (Glorot and Bengio, 2010) initialization becomes identical after weight length normalization 7notice the rows of W are not orthogonal for overcomplete filters, rather the columns are orthogonalized, unless W is undercomplete

8

Under review as a conference paper at ICLR 2018

APRE APRE
Dot Product Dot Product

Cont. Recovery Error vs. Sparsity

50

40

30

20 Orthogonal

10

Orthogonal (noise) Gaussian

0 Gaussian (noise)

0.0 Un0it.2Activ0a.t4ion P0ro.6babil0it.y8(p) 1.0

Bin. Recovery Error vs. Sparsity
50 Orthogonal Orthogonal (noise)
40 Gaussian Gaussian (noise)
30
20
10
0 0.0 Un0it.2Activ0a.t4ion P0ro.6babil0it.y8(p) 1.0

Figure 3: Effect of signal sparseness on continuous (left) and binary (right) signal recovery. Noise in parenthesis indicate the generated data was corrupted with Gaussian noise. Sparser signals are recovered better.

1.0 1.0 0.8 0.8 0.6 0.6 0.4 0.4 0.2 0.2

0 Ep5o0ch 100

0 Ep5o0ch 100

Figure 4: Cosine similarity between greedy paired rows of W and W^ for continuous (left) and binary (right) recovery. The upper, mid and lower bar denotes the 95th, 50th and 5th percentile.

5.3 RECOVERY OF DATA DICTIONARY

We showed the conditions on W and b for good recovery of sparse signal h. In practice, however,
one does not have access to W, in general. Therefore, in this section, we empirically demonstrate
that AE can indeed recover both W and h through optimizing the AE objective. We generate 50, 000 signals h  Rm=200 with the same BINS distribution as in section 5.1. The data are then generate as x = WT h using an incoherent weight matrix W  R200×180 (same as in section 5.1). We then recover the data dictionary W^ by:

W^ = arg min Ex x - WT se(W(x - Ex[x])) 2 ,
W

where

Wi

2 2

=

1i

(20)

Notice that although given sparse signal h the data dictionary W is unique (Hillar and Sommer, 2015), there are m! number of equivalent solutions for W^ , since we can permute dimension of h in AE. To check if the original data dictionary is recovered, we therefore pair up the rows of W and W^ by greedily select the pairs that result in the highest dot product value. We then measure the goodness of the recovery by looking at the values of all the paired dot products. In addition, since we know the pairing, we can calculate APRE to evaluate the quality of recovered hidden signal. As can be observed from fig. 4, by optimizing the AE objective we can recover the the original data dictionary W (almost all of the cosine distances are 1). The final achieved 1.61 and 0.15 APRE for continuous and binary signal recovery, which is a bit less than what we achieved in section 5.1. However, one should note that for this set of experiments we only observed data x and no other information regarding W is exposed. Not surprisingly, we again observed that the binary signal recovery is more robust as compared to the continuous counterpart, which may attribute to its lower information content. We also did experiments on noisy data and achieved similar performance as in section 5.1 when the noise is less significant (see supplementary materials for more details). These results strongly suggests that AEs are capable of recovering the true hidden signal in practice.

6 CONCLUSION
In this paper we looked at the sparse signal recovery problem from the Auto-Encoder perspective and provide novel insights into conditions under which AEs can recover such signals. In particular, 1) from the signal recovery stand point, if we assume that the observed data is generated from some sparse hidden signals according to the assumed data generating process, then, the true hidden representation can be approximately recovered if a) the weight matrices are highly incoherent with unit 2 row length, and b) the bias vectors are as described in equation 11 (theorem 2)8. The recovery also becomes more and more accurate with increasing sparsity in hidden signals. 2) From the data generation perspective, we found that data generated from such signals (assumption 1) have the property of being roughly uncorrelated (theorem 3), and thus pre-process the data to have uncorrelated dimensions may encourage stronger signal recovery. 3) Given only measurement data, we empirically show that the AE reconstruction objective recovers the data generating dictionary, and hence the true signal h. 4) These conditions and observations allow us to view various existing techniques, such as
8For binary recovery, the bias equation is described in 6

9

Under review as a conference paper at ICLR 2018
data whitening, independent component analysis, etc., in a more coherent picture when considering signal recovery.
REFERENCES
Edoardo Amaldi and Viggo Kann. On the approximability of minimizing nonzero variables or unsatisfied relations in linear systems. Theoretical Computer Science, 209(1):237­260, 1998.
Devansh Arpit, Yingbo Zhou, Hung Ngo, and Venu Govindaraju. Why regularized auto-encoders learn sparse representation? In ICML, 2016.
H. Bourlard and Y. Kamp. Auto-association by multilayer perceptrons and singular value decomposition. Biological Cybernetics, 59(4-5):291­294, 1988. ISSN 0340-1200.
Emmanuel J Candes and Terence Tao. Near-optimal signal recovery from random projections: Universal encoding strategies? Information Theory, IEEE Transactions on, 52(12):5406­5425, 2006.
Emmanuel J Candes, Justin K Romberg, and Terence Tao. Stable signal recovery from incomplete and inaccurate measurements. Communications on pure and applied mathematics, 59(8):1207­1223, 2006.
Xavier Glorot and Yoshua Bengio. Understanding the difficulty of training deep feedforward neural networks. In International conference on artificial intelligence and statistics, pages 249­256, 2010.
Xavier Glorot, Antoine Bordes, and Yoshua Bengio. Deep sparse rectifier neural networks. In AISTATS, pages 315­323, 2011.
Mikael Henaff, Kevin Jarrett, Koray Kavukcuoglu, and Yann LeCun. Unsupervised learning of sparse features for scalable audio classification. ISMIR, 11:445. 2011, 2011.
Christopher J Hillar and Friedrich T Sommer. When can dictionary learning uniquely recover sparse data from subsamples? IEEE Transactions on Information Theory, 61(11):6290­6297, 2015.
Geoffrey E Hinton. Distributed representations. 1984.
Aapo Hyvärinen and Erkki Oja. Independent component analysis: algorithms and applications. Neural networks, 13(4):411­430, 2000.
Sergey Ioffe and Christian Szegedy. Batch normalization: Accelerating deep network training by reducing internal covariate shift. In Francis R. Bach and David M. Blei, editors, ICML, volume 37 of JMLR Proceedings, pages 448­456. JMLR.org, 2015.
Koray Kavukcuoglu, Marc'Aurelio Ranzato, and Yann LeCun. Fast inference in sparse coding algorithms with applications to object recognition. arXiv preprint arXiv:1010.3467, 2010.
Alireza Makhzani and Brendan Frey. k-sparse autoencoders. CoRR, abs/1312.5663, 2013. URL http://arxiv.org/abs/1312.5663.
Roland Memisevic, Kishore Reddy Konda, and David Krueger. Zero-bias autoencoders and the benefits of co-adapting features. In ICLR, 2014.
Vinod Nair and Geoffrey E Hinton. Rectified linear units improve restricted boltzmann machines. In Proceedings of the 27th International Conference on Machine Learning (ICML-10), pages 807­814, 2010.
Andrew Ng. Sparse autoencoder. CSE294 Lecture notes, 2011.
Andrew M Saxe, James L McClelland, and Surya Ganguli. Exact solutions to the nonlinear dynamics of learning in deep linear neural networks. arXiv preprint arXiv:1312.6120, 2013.
J. Wright, A.Y. Yang, A. Ganesh, S.S. Sastry, and Yi Ma. Robust face recognition via sparse representation. IEEEE TPAMI, 31(2):210 ­227, Feb. 2009.
Jianchao Yang, Kai Yu, Yihong Gong, and Thomas Huang. Linear spatial pyramid matching using sparse coding for image classification. In CVPR, pages 1794­1801, 2009.
10

Under review as a conference paper at ICLR 2018

Appendix: On Optimality Conditions for Auto-Encoder Signal Recovery

1 PROOFS

Remark 1. Let x1 = WT h where x1  Rn, W  Rm×n and h  Rm. Let x2 = WT h + bd where bd  Rn is a fixed vector. Let h^1 = se(Wx1 + b) and h^2 = se(Wx2 + b - Wbd). Then h^1 = h iff h^2 = h.
Proof: Let h^1 = h. Thus h = se(Wx1 + b). On the other hand, h^2 = se(Wx2 + b - Wbd) = se(WWT h + Wbd + b - Wbd) = se(WWT h + b) = se(Wx1 + b) = h. The other direction can be proved similarly.
Theorem 1. Let each element of h follow BINS(p, 1, µh, lmax) and let h^  Rm be an auto-encoder signal recovery mechanism with Sigmoid activation function and bias b for a measurement vector x  Rn such that x = WT h. If we set bi = - j aijpj i  [m], then    (0, 1),

Pr

1 m

h^ - h

1

m
 1-

(1 - p )e + p ei

-2

( +piaii)2

m j=1,j=i

a2ij

i

-2 (

+(1-pi )aii )2

m j=1,j=i

a2ij

i=1

(21)

where aij = WiT Wj, 

=

ln(

 1-

)

and

Wi

is

the

ith

row

of

the

matrix

W

cast

as

a

column

vector.

Proof. Notice that,

Pr(|h^i -hi|  ) = Pr(|h^i -hi|   hi = 0) Pr(hi = 0)+Pr(|h^i -hi|   hi = 1) Pr(hi = 1) (22)

and from definition 1,
h^i = ( aij hj + bi)
j
Thus,

(23)

Pr(|h^i - hi|  ) = (1 - pi) Pr(( aijhj + bi)   hi = 0)
j
+pi Pr((- aijhj - bi)   hi = 1)
j

(24)

Notice that Pr((

j aij hj + bi)  

hi = 0) = Pr(

j aij hj

+

bi



ln(

 1-

)

hi = 0). Let

zi =

j aij hj + bi and 

=

ln(

 1-

).

Then,

setting

bi

=

-Eh[

j aij hj ] = -

j aij pj , using

Chernoff's inequality, for any t > 0,

Pr(zi  

hi

=

0)

 Eh [etzi ] et

=

Eh

et

j=i aij (hj -pj )-tpiaii
et

Eh =

etaij (hj -pj )
j=i
et( +piaii)

=

j=i Ehj etaij (hj -pj ) et( +piaii)

(25)

Let Tj = Ehj etaij(hj-pj) . Then, Tj = (1 - pj )e-tpj aij + pj et(1-pj )aij = e-tpj aij (1 - pj + pj etaij )

(26)

1

Under review as a conference paper at ICLR 2018

Let eg(t) Tj, thus,

g(t) = -tpjaij + ln(1 - pj + pjetaij ) = g(0) = 0

g

(t)

=

-pj aij

+

1

pj aij etaij - pj + pj etaij

= g (0) = 0

g

(t) =

pj (1 - pj )a2ij etaij (1 - pj + pj etaij )2

g

(t)

=

pj (1 - pj )a3ij etaij (1 - pj + pj etaij )(1 - pj (1 - pj + pj etaij )4

- pj etaij )

(27) (28)
(29)
(30) (31)

Setting g

(t)

= 0, we get t

=

1 aij

ln(

1-pj pj

).

Thus, g

(t) 

g(t) =

.a2ij
4

By Taylor's theorem,

c  [0, t]t > 0 s.t.,

t2 g(t) = g(0) + tg (0) + g

(c) 

t2ai2j

28

Thus we can upper bound Tj as,

T  e t2ai2j
j8

Hence we can write Pr(zi   ) as

t2 ai2j

Pr(zi





)



j=i Tj et( +aiipi)

=

j=i e 8 et( +aiipi)

t2
=e

j=i a2ij 8

-t(aii pi +

)

(32) (33) (34)

On the other hand, notice Pr((- j aijhj - bi)   hi = 1) = Pr(- j aijhj - bi 

ln(

 1-

)

hi = 1) = Pr(-zi  

hi = 1).

Pr(-zi  

hi

=

1)



Eh [e-tzi ] et

=

Eh

e-t

j=i aij (hj -pj )-t(1-pi)aii
et

Eh =

j=i e-taij (hj -pj ) et( +(1-pi)aii)

=

j=i Ehj e-taij (hj -pj ) et( +(1-pi)aii)

(35) (36) (37)

Let Tj = Ehj e-taij(hj-pj) . Then we can similarly bound Pr(-zi   ) by effectively flipping the sign of aij's in the previous derivation,

t2 ai2j

Pr(-zi



)

et(

j=i Tj
+aii (1-pi ))

=

j=i e 8 et( +aii(1-pi))

t2
=e

j=i a2ij 8

-t(aii (1-pi )+

)

Minimizing both 34 and 38 with respect to t and applying union bound, we get,

(38)

-2(aiipi+ )2

-2(aii(1-pi)+ )2

Pr(|h^i - hi|  )  (1 - pi)e

+ p ej=i a2ij

i

j=i ai2j

(39)

Since the above bound holds for all i  [m], applying union bound on all the units yields the desired result.

Proposition 1. Let each element of h follow BINS(p, 1, µh, lmax) and let h^  Rm be an autoencoder signal recovery mechanism with Sigmoid activation function and bias b for a measurement

2

Under review as a conference paper at ICLR 2018

vector x = WT h + e where e  Rn is any noise vector independent of h. If we set bi = - j aijpj - WiT Ee[e] i  [m], then    (0, 1),

Pr

1 m

h^ - h

1

m
1-

(1 - p )ei

-2 (

-WiT (e-Ee[e])+piaii)2

m j=1,j=i

ai2j

i=1

+p ei

-2 (

-WiT (e-Ee[e])+(1-pi)aii)2

m j=1,j=i

ai2j

(40) (41)

where aij = WiT Wj, 

=

ln(

 1-

)

and

Wi

is

the

ith

row

of

the

matrix

W

cast

as

a

column

vector.

Proof. Notice that,

Pr(|h^i - hi|  ) = Pr(|h^i - hi|   hi = 0) Pr(hi = 0)

(42)

+ Pr(|h^i - hi|   hi = 1) Pr(hi = 1)

(43)

and from definition 1,
h^i = ( aij hj + bi + WiT e)
j
Thus,
Pr(|h^i - hi|  ) = (1 - pi) Pr(( aijhj + bi + WiT e)   hi = 0)
j
+pi Pr((- aijhj - bi - WiT e)   hi = 1)
j

(44) (45)

Notice that Pr((

j aijhj +bi+WiT e)   hi = 0) = Pr(

j

aij hj +bi+WiT e



ln(

 1-

)

hi

=

0). Let zi =

j aij hj + bi + WiT e and 

=

ln(

 1-

).

Then, setting bi

=

-Eh[

j aij hj ] -

WiT Ee[e] = - j aijpj, using Chernoff's inequality on random variable h, for any t > 0,

Pr(zi  

hi

= 0)  et

Eh [etzi ]
-tWiT (e-Ee[e])

=

Eh

et j=i aij (hj -pj )-tpiaii et -tWiT (e-Ee[e])

=

Eh

etaij (hj -pj )
j=i

et( -tWiT (e-Ee[e])+piaii)

=

j=i Ehj etaij (hj -pj ) et( -tWiT (e-Ee[e])+piaii)

(46)

Setting ¯ :=  - WiT (e - Ee[e]), we can rewrite the above inequality as

Pr(zi   hi = 0) 

j=i Ehj etaij (hj -pj ) et(¯+pi aii )

(47)

Since the above inequality becomes identical to equation 25, the rest of the proof is similar to theorem 2.

Theorem 2. Let each element of h  Rm follow BINS(p, fc, µh, lmax) distribution and let h^ReLU (x; W, b) be an auto-encoder signal recovery mechanism with Rectified Linear activation function (ReLU) and bias b for a measurement vector x  Rn such that x = WT h. If we set
bi - j aijpjµhj i  [m], then    0,

Pr m1 h^ - h    1 - e1

m

(+
-2

j (1-pj )(lmaxj -2pj µhj ) max(0,aij ))2 j ai2j lm2 axj

i=1

(+
-2
+e

j (1-pj )(lmaxj -2pj µhj ) max(0,-aij ))2

j a2ij l2maxj



(48)

3

Under review as a conference paper at ICLR 2018

where ais are vectors such that

aij =

WiT Wj

if

WiT Wi - 1 if

i=j i=j

Wi is the ith row of the matrix W cast as a column vector.

(49)

Proof. From definition 1 and the definition of aij above,
h^i = max{0, aijhj + hi + bi}
j
h^i - hi = max{-hi, aijhj + bi}
j
Let zi = j aijhj + bi. Thus, h^i - hi = max{-hi, zi}. Then, conditioning upon zi,
Pr(|h^i - hi|  ) = Pr |h^i - hi|   hi > 0, |zi|   Pr(|zi|  , hi > 0) + Pr |h^i - hi|   hi > 0, |zi| >  Pr(|zi| > , hi > 0) + Pr |h^i - hi|   hi = 0, |zi|   Pr(|zi|  , hi = 0) + Pr |h^i - hi|   hi = 0, |zi| >  Pr(|zi| > , hi = 0)

(50)
(51) (52) (53) (54)

Since Pr |h^i - hi|   |zi|   = 1, we have,

Pr(|h^i - hi|  )  Pr(|zi|  )

(55)

The above inequality is obtained by ignoring the positive terms that depend on the condition |zi| >  and marginalizing over hi. For any t > 0, using Chernoff's inequality,

Pr(zi



)



Eh [etzi ] et

(56)

Setting bi = - j aij µj , where µj = Ehj [hj ] = pj µhj ,

Eh et j aij (hj -µj )

Eh

Pr(zi  )  et =

Let Tj = Ehj etaij(hj-µj) . Then,

etaij (hj -µj )
j
et

=

j Ehj etaij (hj -µj ) et

(57)

Tj = (1 - pj )e-taij µj + pj Evfc(0+,lmax,µh) etaij (v-µj )

(58)

where fc(a, b, µh) denotes any arbitrary distribution in the interval (a, b] with mean µh. If aij  0, let  = -µj and  = lmaxj - µj which essentially denote the lower and upper bound of hj - µj. Then,

Tj = (1 - pj )etaij  + pj Evfc(0+,lmaxj ,µhj ) etaij (v-µj )

 (1 - pj )etaij + pj Ev

 - (v - µj ) etaij + (v - µj ) -  etaij

-

-

=

(1

-

pj )etaij 

+



-

(1 

- -

pj )µhj 

pj etaij 

+

(1

-

pj )µhj -

-

 pj etaij 

=

(1

-

pj )etaij 

+

pj etaij  -

-

pj (1 - pj )µhj ( - )

(etaij 

-

etaij  )

-

pj  etaij  -

(59) (60) (61) (62)

4

Under review as a conference paper at ICLR 2018

where the first inequality in the above equation is from the property of a convex function. Define

u

=

taij (

-

),



=

-

 -

.

Then,

Tj  e-u

1

-

pj

+

pj  -

-

pj (1 - pj )µhj ( - )

(1

-

eu)

-

pj  eu -

(63)

= e-u 1 + pj  - pj (1 - pj )µhj - pj  - pj (1 - pj )µhj eu

-

( - )

-

( - )

(64)

= e-u 1 -

pj 

+

pj (1 - pj )µhj ( - )

+

pj 

+

pj (1 - pj )µhj ( - )

eu

(65)

(66)

Define  = pj +

pj (1-pj )µhj (-)

and let eg(u)

Tj = e-u(1 -  + eu). Then,

g(u) = -u + ln(1 -  + eu) = g(0) = 0

g

(u)

=

-

+

1

-

eu +

eu

=

g (0) = - +  = -(1 - p) + p(1 - p)µh ( - )

(1 - )eu g (u) = (1 -  + eu)2

(1 - )(1 -  + eu)eu(1 -  - eu)

g (u) =

(1 -  + eu)4

(67) (68) (69) (70)

Thus, for getting a maxima for g (u), we set g (u) = 0 which implies 1 -  - eu = 0, or,

eu =

1- 

.

Substituting

this

u

in

g

(u)  1/4. By Taylor's theorem, c  [0, u]u > 0 such that,

u2 g(u) = g(0) + ug (0) + g
2

(c)



0

-

u(1

-

pj )

+

upj (1 - pj )µhj ( - )

+ u2/8

(71)

Thus we can upper bound Tj as,

T  eu2/8-u



(1-pj

)-

pj

(1-pj )µhj (-)

j

= et2ai2j (-)2/8+taij (-)

(1-pj -

)

+

pj

(1-pj )µhj (-)

(72)

Substituting for , , we get,

T  e = ej

t2a2ij lm2 axj /8+taij (1-pj )(-µj +pj µhj )

t2a2ij lm2 axj 8

(73)

On the other hand, if aij < 0, then we can set  = µj - lmaxj and  = µj and proceeding similar to equation 59, we get,

T  e = e (74)j

t2ai2j lm2 axj /8+t|aij |(1-pj )(µj -lmaxj +pj µhj )

t2 a2ij lm2 axj 8

-t|aj |(1-pj )(lmaxj

-2pj µhj )

Then, collectively, we can write Pr(zi  ) as

Pr(zi  ) 

Tj et

= et2

j

( )j ai2j lm2 axj /8-t +(1-pj )(lmaxj -2pj µhj ) max(0,-aij )

(75)

We similarly bound Pr(-zi  ) by effectively flipping the sign of aij's,

Pr(-zi  )  et2 ( )j ai2j lm2 axj /8-t +(1-pj )(lmaxj -2pj µhj ) max(0,aij )

(76)

Minimizing both 75 and 76 with respect to t and applying union bound, we get,

Pr(|h^ - h |  )  ei i

(+
-2

j (1-pj )(lmaxj -2pj µhj ) max(0,aij ))2 j ai2j lm2 axj

(+
-2
+e

j (1-pj )(lmaxj -2pj µhj ) max(0,-aij ))2 j a2ij l2maxj

 i  [m]

(77) (78)

Since the above bound holds for all i  [m], applying union bound on all the units yields the desired result.

5

Under review as a conference paper at ICLR 2018

Proposition 2. Let each element of h follow BINS(p, fc, µh, lmax) distribution and let h^  Rm be
an auto-encoder signal recovery mechanism with Rectified Linear activation function and bias b for a measurement vector x  Rn such that x = WT h + e where e is any noise random vector
independent of h. If we set bi - j aijpjµhj - WiT Ee[e] i  [m], then    0,

Pr m1 h^ - h    1 - e1

m

-2 (-WiT (e-Ee[e])+

j (1-pj )(lmaxj -2pj µhj ) max(0,aij ))2 j a2ij l2maxj

i=1

-2 (-WiT (e-Ee[e])+
+e

j (1-pj )(lmaxj -2pj µhj ) max(0,-aij ))2

j ai2j lm2 axj



where ais are vectors such that

aij =

WiT Wj

if

WiT Wi - 1 if

i=j i=j

Wi is the ith row of the matrix W cast as a column vector.

(79) (80)

Proof. Recall that,
h^i = max{0, aijhj + hi + WiT e + bi}
j
h^i - hi = max{-hi, aijhj + WiT e + bi}
j
Let zi = j aijhj + bi + WiT e. Then, similar to theorem 2, conditioning upon zi,
Pr(|h^i - hi|  ) = Pr |h^i - hi|   hi > 0, |zi|   Pr(|zi|  , hi > 0)
+ Pr |h^i - hi|   hi > 0, |zi| >  Pr(|zi| > , hi > 0)
+ Pr |h^i - hi|   hi = 0, |zi|   Pr(|zi|  , hi = 0)
+ Pr |h^i - hi|   hi = 0, |zi| >  Pr(|zi| > , hi = 0)

(81) (82)
(83) (84) (85) (86)

Since Pr |h^i - hi|   |zi|   = 1, we have,

Pr(|h^i - hi|  )  Pr(|zi|  )

For any t > 0, using Chernoff's inequality for the random variable h,

Pr(zi



)



Eh [etzi ] et

Setting bi = - j aij µj - WiT Ee[e], where µj = Ehj [hj ] = pj µhj ,

(87) (88)

Eh et j aij (hj -µj ) Pr(zi  )  et-tWiT (e-Ee[e])

Eh

etaij (hj -µj )
j

= et-tWiT (e-Ee[e])

=

j Ehj etaij (hj -µj ) et-tWiT (e-Ee[e])

(89)

Setting ¯ :=  - WiT (e - Ee[e]), we can rewrite the above inequality as

Pr(zi  ) 

j Ehj etaij (hj -µj ) et¯

(90)

Since the above inequality becomes identical to equation 57, the rest of the proof is similar to theorem 2.

6

Under review as a conference paper at ICLR 2018

Theorem 3. (Uncorrelated Distribution Bound): If data is generated as x = WT h where h  Rm has covariance matrix diag(), (  R+m ) and W  Rm×n (m > n) is such that each row of W has unit length and the rows of W are maximally incoherent, then the covariance matrix of the
generated data is approximately spherical (uncorrelated) satisfying,

min  - I F 


1 (m 
n

2 2

-



21)

where  = Ex[(x - Ex[x])(x - Ex[x])T ] is the covariance matrix of the generated data.

(91)

Proof. Notice that, Ex[x] = WT Eh[h]

(92)

Thus,

Ex[(x - Ex[x])(x - Ex[x])T ] = Eh[(WT h - WT Eh[h])(WT h - WT Eh[h])T ] = Eh[WT (h - Eh[h])(h - Eh[h])T W] = WT Eh[(h - Eh[h])(h - Eh[h])T ]W

(93) (94) (95)

Substituting the covariance of h as diag(),

 = Ex[(x - Ex[x])(x - Ex[x])T ] = WT diag()W

(96)

Thus,

 - I

2 F

= tr

(WT diag()W - I)(WT diag()W - I)T

= tr WT diag()WWT diag()W + 2I - 2WT diag()W

(97) (98)

Using the cyclic property of trace,

 - I

2 F

= tr

WWT diag()WWT diag() + 2I - 2WWT diag()

(99)

m

=

WWT

diag( )

2 F

+ 2n - 2

i

(100)

i=1

mm

 ( i2)(1 + µ2(m - 1)) + 2n - 2 i (101)

i=1 i=1

Finally

minimizing

w.r.t

,

we

get



=

1 n

m i=1

i.

Substituting

this

into

the

above

inequality,

we

get,

min


 - I

2 F

m
(

i2)(1

+

µ2(m

-

1))

+

1 (
n

m

i)2

-

2 (
n

m

i)2

i=1 i=1 i=1

m
=(

i2)(1

+

µ2(m

-

1))

-

1 (
n

m

i)2

i=1 i=1

(102)
(103) (104)

Since the weight matrix is maximally incoherent, using Welch bound, we have that, µ 

m-n n(m-1)

,

1

.

Plugging the lower bound of µ (maximal incoherence) for any fixed m and n

into the above bound yields,

min


 - I

2 F

(

m

i2)(1

+

m-n n(m - 1) (m

-

1))

-

1 (
n

m

i)2

i=1 i=1

=(

m

i2)(1

+

m

- n

n

)

-

1 (
n

m

i)2

i=1 i=1

1 =
n

m

2 2

-



2 1

(105) (106) (107)

7

Under review as a conference paper at ICLR 2018

2 SUPPLEMENTARY EXPERIMENTS

2.1 SUPPLEMENTARY EXPERIMENTS FOR SECTION 5.1

Here we show the recovery error (APRE) for signals generated with coherent weight matrix, and as expected the recovery result is poor and the values of c and b are unpredictable. The minimum average percentage recovery error we got for continous signal is 45.75, and for binary signal is 32.63.

Cont. Signal Recovery
1.5 1.0 0.5

90.42 80.42 70.42 60.42 50.42

Binary Signal Recovery
1.5 1.0 40.33 0.5

1.0 0.5 0.b0 0.5 1.0

1.0 0.5 0.b0 0.5 1.0

Figure 5: Error heatmap showing optimal values of c and b for recovering continous (left) and binary (right) signal using coherent weights.

c
Coherence
c

2.2 SUPPLEMENTARY EXPERIMENTS FOR SECTION 5.2

Fig. 6 shows that the coherence of orthogonal initialized weight matrix is more incoherent as compared to the ones that using Gaussian based initialization.

0.09 Comparison of Incoherence

0.08

0.07

0.06

0.05

0.04

0.03 0.02

orthogonal gaussian

0.01

0.01000 150 2n00 250

Figure 6: Coherence of orthogonal and Gaussian weight matrix with varying dimensions.

2.3 SUPPLEMENTARY EXPERIMENTS FOR SECTION 5.3
For noisy signal recovery we add independent Gaussian noise to data with mean 100 and standard deviation ranging from 0.01 to 0.2. Note that the data is normally within the range of[-1, 1], so the noise is quite significant when we have a standard deviation > 0.1. It is clear that even in noisy case AE can recover the dictionary (see fig. 7). However, the recovery is not very strong when the noise is large > 0.1 for continous signals, which is because 1) the precise value in this case is continous and thus is more influenced by the noise, 2) the dictionary recovery is poor, which result poor signal recovery. On the other hand, the recovery is robust in case of recovering binary signals. Similar results were found on the APRE of recovered hidden signals. The reason for more robust recovery for binary signal is that 1) the information content is lower and 2) we binarize the recovered hidden signal by thresholding it, which further denoised the recovery. When optimizing the AE objective for binary
8

Under review as a conference paper at ICLR 2018

singal recovery case, we did a small trick to simulate the binarization of the signal. From our analysis (see Theorem 1), a recovery error  = 0.5 is reasonable as we can binarize the recovery using some threshold. However, when optimizing the AE using gradient based method we are unable to do this. To simulate this effect, we offset the pre-activation by a constant k and multiply the pre-activation by a constant c, so that it signifies the input and push the post-activation values towards 0 and 1. In other words, we optimize the following objective when doing binary signal recovery:

W^ = arg min Ex x - WT  (c {W(x - Ex[x]) + k}) 2 ,
W

where

Wi

2 2

=

1i

(108)

where  is the sigmoid function. We find set c = 6 and k = -0.6 is sufficient to saturate the sigmoid and simulate the binarization of hidden signals.

Dot Product

1.0 1.0 1.0 1.0 1.0

0.8 0.8 0.8 0.8 0.8

Dot Product

Dot Product

Dot Product

Dot Product

0.6 0.6 0.6 0.6 0.6 0.4 0.4 0.4 0.4
0.4 0.2 0.2 0.2 0.2

0.2 0 Ep5o0ch 100

0 Ep5o0ch 100

0 Ep5o0ch 100

0 Ep5o0ch 100

0 Ep5o0ch

1.0 1.0 1.0 1.0 0.40

0.8 0.8 0.8 0.8 0.35

Dot Product

Dot Product

Dot Product

Dot Product

0.6

0.6

0.6

0.6

0.30 0.25

0.4 0.4 0.4 0.4 0.20

0.2 0.0 0

0.2

Ep5o0ch 100

0

0.2

Ep5o0ch 100

0

0.2

Ep5o0ch 100

0

0.15

0.10

Ep5o0ch 100

0

Ep5o0ch

Dot Product

100 100

Figure 7: Cosine similarity between greedy paired rows of W and W^ for noisy binary (upper) and continous (lower) recovery. From left to right the noise stand deviations are 0.01, 0.02, 0.05, 0.1, 0.2, respectively. The upper, mid and lower bar represent the 95th, 50th and 5th percentile.

Table 1: Average percentage recovery error for noisy AE recovery.

Noise std.

0.01 0.02 0.05 0.1 0.2

Continous APRE 2.06 1.63 9.48 34.16 56.79 Binary APRE 0.15 0.16 0.18 1.56 4.00

9

